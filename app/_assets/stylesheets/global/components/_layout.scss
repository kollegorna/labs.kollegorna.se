// -----------------------------------------------------------------------------
// Gutter mixins
//
// The gutter mixins provides gutter for different breakpoints.
// -----------------------------------------------------------------------------

// -----------------------------------------------------------------------------
// Global gutter on a box (v/h)
// -----------------------------------------------------------------------------
@mixin ds-gutter($type: false) {
  @if ($type == false) {
    $type: padding;
  } @else {
    $type: margin;
  }

  #{$type}: $ds-padding-smartphone;

  @include breakpoint($ds-breakpoint-tablet) {
    #{$type}: $ds-padding-tablet;
  }

  @include breakpoint($ds-breakpoint-laptop) {
    #{$type}: $ds-padding-laptop;
  }
}

// -----------------------------------------------------------------------------
// Gutter vertical
// -----------------------------------------------------------------------------
@mixin ds-gutter-v($type: false) {
  @if ($type == false) {
    $type: padding;
  } @else {
    $type: margin;
  }

  #{$type}-top: $ds-padding-smartphone-v;
  #{$type}-bottom: $ds-padding-smartphone-v;

  @include breakpoint($ds-breakpoint-tablet) {
    #{$type}-top: $ds-padding-tablet-v;
    #{$type}-bottom: $ds-padding-tablet-v;
  }

  @include breakpoint($ds-breakpoint-laptop) {
    #{$type}-top: $ds-padding-laptop-v;
    #{$type}-bottom: $ds-padding-laptop-v;
  }
}

@mixin ds-gutter-v-double($type: false) {
  @if ($type == false) {
    $type: padding;
  } @else {
    $type: margin;
  }

  #{$type}-top: ($ds-padding-smartphone-v*2);
  #{$type}-bottom: ($ds-padding-smartphone-v*2);

  @include breakpoint($ds-breakpoint-tablet) {
    #{$type}-top: ($ds-padding-tablet-v*2);
    #{$type}-bottom: ($ds-padding-tablet-v*2);
  }

  @include breakpoint($ds-breakpoint-laptop) {
    #{$type}-top: ($ds-padding-laptop-v*2);
    #{$type}-bottom: ($ds-padding-laptop-v*2);
  }
}

// -----------------------------------------------------------------------------
// Gutter horizontal
// -----------------------------------------------------------------------------
@mixin ds-gutter-h($type: false) {
  @if ($type == false) {
    $type: padding;
  } @else {
    $type: margin;
  }

  #{$type}-left: $ds-padding-smartphone-h;
  #{$type}-right: $ds-padding-smartphone-h;

  @include breakpoint($ds-breakpoint-tablet) {
    #{$type}-left: $ds-padding-tablet-h;
    #{$type}-right: $ds-padding-tablet-h;
  }

  @include breakpoint($ds-breakpoint-laptop) {
    #{$type}-left: $ds-padding-laptop-h;
    #{$type}-right: $ds-padding-laptop-h;
  }
}

// -----------------------------------------------------------------------------
// Gutter top
// -----------------------------------------------------------------------------
@mixin ds-gutter-top($type: false) {
  @if ($type == false) {
    $type: padding;
  } @else {
    $type: margin;
  }

  #{$type}-top: $ds-padding-smartphone-v;

  @include breakpoint($ds-breakpoint-tablet) {
    #{$type}-top: $ds-padding-tablet-v;
  }

  @include breakpoint($ds-breakpoint-laptop) {
    #{$type}-top: $ds-padding-laptop-v;
  }
}

// -----------------------------------------------------------------------------
// Gutter bottom
// -----------------------------------------------------------------------------
@mixin ds-gutter-bottom($type: false) {
  @if ($type == false) {
    $type: padding;
  } @else {
    $type: margin;
  }

  #{$type}-bottom: $ds-padding-smartphone-v;

  @include breakpoint($ds-breakpoint-tablet) {
    #{$type}-bottom: $ds-padding-tablet-v;
  }

  @include breakpoint($ds-breakpoint-laptop) {
    #{$type}-bottom: $ds-padding-laptop-v;
  }
}

// -----------------------------------------------------------------------------
// Gutter left
// -----------------------------------------------------------------------------
@mixin ds-gutter-left($type: false) {
  @if ($type == false) {
    $type: padding;
  } @else {
    $type: margin;
  }

  #{$type}-left: $ds-padding-smartphone-h;

  @include breakpoint($ds-breakpoint-tablet) {
    #{$type}-left: $ds-padding-tablet-h;
  }

  @include breakpoint($ds-breakpoint-laptop) {
    #{$type}-left: $ds-padding-laptop-h;
  }
}

// -----------------------------------------------------------------------------
// Gutter right
// -----------------------------------------------------------------------------
@mixin ds-gutter-right($type: false) {
  @if ($type == false) {
    $type: padding;
  } @else {
    $type: margin;
  }

  #{$type}-right: $ds-padding-smartphone-h;

  @include breakpoint($ds-breakpoint-tablet) {
    #{$type}-right: $ds-padding-tablet-h;
  }

  @include breakpoint($ds-breakpoint-laptop) {
    #{$type}-right: $ds-padding-laptop-h;
  }
}

// -----------------------------------------------------------------------------
// Layout mixins
//
// These mixins can be used within our projects for generating layouts with
// different breakpoints. Columns are handled by Griddo.
// -----------------------------------------------------------------------------

@mixin ds-layout-columns-two {
  @include griddo-width(6);

  &:nth-child(2n+1) {
    clear: both;
  }
}

@mixin ds-layout-columns-three {
  @include griddo-width(4);

  &:nth-child(2n+1) {
    clear: none;
  }

  &:nth-child(3n+1) {
    clear: both;
  }
}

@mixin ds-layout-columns-four {
  @include griddo-width(3);

  &:nth-child(2n+1),
  &:nth-child(3n+1) {
    clear: none;
  }

  &:nth-child(4n+1) {
    clear: both;
  }
}

@mixin ds-layout-columns-five {
  @include griddo-width(1,5);

  &:nth-child(2n+1),
  &:nth-child(3n+1),
  &:nth-child(4n+1) {
    clear: none;
  }

  &:nth-child(5n+1) {
    clear: both;
  }
}

@mixin ds-layout-columns-six {
  @include griddo-width(1,6);

  &:nth-child(2n+1),
  &:nth-child(3n+1),
  &:nth-child(4n+1),
  &:nth-child(5n+1) {
    clear: none;
  }

  &:nth-child(6n+1) {
    clear: both;
  }
}

// SETUP FOR UP TO GRID
@mixin ds-layout-columns-up-to-setup($wrapper, $column, $behavior: false) {
  .#{$wrapper} {
    @include griddo-row($behavior);
    .#{$column} {
      @include griddo-column(12);

      &:last-child {
        float: left;
      }
    }
  }
}

// UP TO 2
// Up to two columns in a row
// --
// Tablet - Two columns
@mixin ds-layout-columns-up-to-two($wrapper, $column, $behavior: false) {
  @include ds-layout-columns-up-to-setup($wrapper, $column, $behavior);

  @include breakpoint($ds-breakpoint-tablet) {
    .#{$wrapper} {
      .#{$column} {
        @include ds-layout-columns-two;
      }
    }
  }
}

// UP TO 3
// Up to three columns in a row
// --
// Smartphone - Two columns
// Tablet - Three columns
@mixin ds-layout-columns-up-to-three($wrapper, $column, $behavior: false) {
  @include ds-layout-columns-up-to-setup($wrapper, $column, $behavior);

  @include breakpoint($ds-breakpoint-smartphone) {
    .#{$wrapper} {
      .#{$column} {
        @include ds-layout-columns-two;
      }
    }
  }

  @include breakpoint($ds-breakpoint-tablet) {
    .#{$wrapper} {
      .#{$column} {
        @include ds-layout-columns-three;
      }
    }
  }
}

// UP TO 4
// Up to four columns in a row
// --
// Smartphone - Two columns
// Tablet - Three columns
// Laptop - Four columns
@mixin ds-layout-columns-up-to-four($wrapper, $column, $behavior: false) {
  @include ds-layout-columns-up-to-setup($wrapper, $column, $behavior);

  @include breakpoint($ds-breakpoint-smartphone) {
    .#{$wrapper} {
      .#{$column} {
        @include ds-layout-columns-two;
      }
    }
  }

  @include breakpoint($ds-breakpoint-tablet) {
    .#{$wrapper} {
      .#{$column} {
        @include ds-layout-columns-three;
      }
    }
  }

  @include breakpoint($ds-breakpoint-laptop) {
    .#{$wrapper} {
      .#{$column} {
        @include ds-layout-columns-four;
      }
    }
  }
}

// UP TO 5
// Up to five columns in a row
// --
// Smartphone - Two columns
// Tablet - Three columns
// Laptop - Four columns
// Desktop - Five columns
@mixin ds-layout-columns-up-to-five($wrapper, $column, $behavior: false) {
  @include ds-layout-columns-up-to-setup($wrapper, $column, $behavior);

  @include breakpoint($ds-breakpoint-smartphone) {
    .#{$wrapper} {
      .#{$column} {
        @include ds-layout-columns-two;
      }
    }
  }

  @include breakpoint($ds-breakpoint-tablet) {
    .#{$wrapper} {
      .#{$column} {
        @include ds-layout-columns-three;
      }
    }
  }

  @include breakpoint($ds-breakpoint-laptop) {
    .#{$wrapper} {
      .#{$column} {
        @include ds-layout-columns-four;
      }
    }
  }

  @include breakpoint($ds-breakpoint-desktop) {
    .#{$wrapper} {
      .#{$column} {
        @include ds-layout-columns-five;
      }
    }
  }
}

// UP TO 6
// Up to six columns in a row
// --
// Smartphone - Two columns
// Tablet - Three columns
// Laptop - Four columns
// Desktop - Five columns
// Cinema - Six columns
@mixin ds-layout-columns-up-to-six($wrapper, $column, $behavior: false) {
  @include ds-layout-columns-up-to-setup($wrapper, $column, $behavior);

  @include breakpoint($ds-breakpoint-smartphone) {
    .#{$wrapper} {
      .#{$column} {
        @include ds-layout-columns-two;
      }
    }
  }

  @include breakpoint($ds-breakpoint-tablet) {
    .#{$wrapper} {
      .#{$column} {
        @include ds-layout-columns-three;
      }
    }
  }

  @include breakpoint($ds-breakpoint-laptop) {
    .#{$wrapper} {
      .#{$column} {
        @include ds-layout-columns-four;
      }
    }
  }

  @include breakpoint($ds-breakpoint-desktop) {
    .#{$wrapper} {
      .#{$column} {
        @include ds-layout-columns-five;
      }
    }
  }

  @include breakpoint($ds-breakpoint-cinema) {
    .#{$wrapper} {
      .#{$column} {
        @include ds-layout-columns-six;
      }
    }
  }
}

// -----------------------------------------------------------------------------
// Full screen container
//
//
// -----------------------------------------------------------------------------
@mixin ds-layout-fullscreen($wrapper, $content, $breakpoint: $ds-breakpoint-tablet) {
  @include breakpoint($breakpoint) {
    .#{$wrapper} {
      display: table;
      position: relative;
      width: 100%;
    }

    .#{$content} {
      display: table-cell;
      text-align: center;
      vertical-align: middle;
    }
  }
}

// -----------------------------------------------------------------------------
// Layout classes
//
// Generate classes with our mixins above.
// -----------------------------------------------------------------------------

// Generate a layout which can contain up to four columns in a row.
@include ds-layout-columns-up-to-two(l-up-2-columns, l-column);
@include ds-layout-columns-up-to-three(l-up-3-columns, l-column);
@include ds-layout-columns-up-to-four(l-up-4-columns, l-column);
@include ds-layout-columns-up-to-five(l-up-5-columns, l-column);
@include ds-layout-columns-up-to-six(l-up-6-columns, l-column);
@include ds-layout-fullscreen(l-fullscreen, l-fullscreen__content);

// Layout modifiers
%l-max-100 {
  max-width: 100%;
}
.l-max-100 {
  @extend %l-max-100;
}

%l-max-800-px {
  max-width: 800px;
}
.l-max-800-px {
  @extend %l-max-800-px;
}

%l-max-1200-px {
  max-width: 1200px;
}
.l-max-1200-px {
  @extend %l-max-1200-px;
}

%l-max-1400-px {
  max-width: 1400px;
}
.l-max-1400-px {
  @extend %l-max-1400-px;
}

%l-max-1600-px {
  max-width: 1600px;
}
.l-max-1600-px {
  @extend %l-max-1600-px;
}

// -----------------------------------------------------------------------------
// Layout helper classes
// -----------------------------------------------------------------------------

%l-left {
  float: left;
}
.l-left {
  @extend %l-left;
}

%l-right {
  float: right;
}
.l-right {
  @extend %l-right;
}

%l-no-margin {
  margin: 0;
}
.l-no-margin {
  @extend %l-no-margin;
}

%l-no-padding {
  padding: 0;
}
.l-no-padding {
  @extend %l-no-padding;
}
